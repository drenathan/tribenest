version: "3.8"

services:
  # Main application
  tribenest-app:
    image: ghcr.io/drenathan/tribenest:latest
    container_name: tribenest-app
    restart: unless-stopped
    ports:
      - "3000:80"
    extra_hosts:
      - "api.localhost:127.0.0.1"
      - "admin.localhost:127.0.0.1"
    environment:
      # Database configuration
      - NODE_ENV=production
      - PORT=8000
      - DATABASE_HOST=tribenest-postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=tribe
      - DATABASE_PASSWORD=tribe
      - DATABASE_NAME=tribe

      # Redis configuration
      - REDIS_URL=redis://:tribe_redis_password@tribenest-redis:6379

      # JWT configuration
      - JWT_SECRET=verylongandverysafejwtsecret
      - ACCESSTOKENTTL=${ACCESSTOKENTTL:-1h}

      - ROOT_DOMAIN=yourdomain.com
      - API_URL=https://api.yourdomain.com
      - ADMIN_URL=https://admin.yourdomain.com

      # Minio configuration
      - MINIO_ACCESS_KEY=tribenest
      - MINIO_SECRET_KEY=tribenest
      - MINIO_BUCKET=tribenest
      - MINIO_URL=http://assets.yourdomain.com
      - MINIO_REGION=us-east-1
      - MINIO_BUCKET_URL=http://assets.yourdomain.com/tribenest

    depends_on:
      - postgres
      - redis
    networks:
      - tribenest-prod-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: tribenest-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=tribe
      - POSTGRES_PASSWORD=tribe
      - POSTGRES_DB=tribe
    volumes:
      - tribenest_postgres_prod_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tribenest-prod-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: tribenest-redis
    restart: unless-stopped
    command: redis-server --requirepass tribe_redis_password
    environment:
      - REDIS_PASSWORD=tribe_redis_password
    ports:
      - "6379:6379"
    volumes:
      - tribenest_redis_prod_data:/data
    networks:
      - tribenest-prod-network

  # Minio storage
  minio:
    image: minio/minio:latest
    container_name: tribenest-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - tribenest_minio_prod_data:/data
    networks:
      - tribenest-prod-network
    environment:
      - MINIO_ROOT_USER=tribenest
      - MINIO_ROOT_PASSWORD=tribenest
    command: server /data --console-address ":9001"

  # set up minio bucket
  minio_setup:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - tribenest-prod-network
    entrypoint: >
      /bin/sh -c "
        # Wait until MinIO is responding
        until mc alias set tribenest http://tribenest-minio:9000 tribenest tribenest; do
          echo 'Waiting for MinIO...';
          sleep 2;
        done;

        echo 'Connected to MinIO';

        # Only create the bucket if it doesn't exist
        if ! mc ls tribenest/tribenest > /dev/null 2>&1; then
          echo 'Bucket not found. Creating...';
          mc mb tribenest/tribenest;
          mc anonymous set-json minio-anon-permission.json tribenest/tribenest;
          echo 'Bucket created and policy set to public';
        else
          echo 'Bucket already exists';
        fi;

        echo 'MinIO setup complete';
        exit 0;
      "

volumes:
  tribenest_postgres_prod_data:
  tribenest_redis_prod_data:
  tribenest_minio_prod_data:

networks:
  tribenest-prod-network:
    driver: bridge
