/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/_dashboard/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as DashboardIndexRouteImport } from './routes/_dashboard/index'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as DashboardTribeIndexRouteImport } from './routes/_dashboard/tribe/index'
import { Route as DashboardTribeMembersRouteImport } from './routes/_dashboard/tribe/members'
import { Route as DashboardTribeCollectionsRouteImport } from './routes/_dashboard/tribe/collections'
import { Route as DashboardWebsiteThemesIndexRouteImport } from './routes/_dashboard/website/themes/index'
import { Route as DashboardWebsiteHomeIndexRouteImport } from './routes/_dashboard/website/home/index'
import { Route as DashboardTribePostsIndexRouteImport } from './routes/_dashboard/tribe/posts/index'
import { Route as DashboardTribeMessagesIndexRouteImport } from './routes/_dashboard/tribe/messages/index'
import { Route as DashboardTribeMembershipTiersIndexRouteImport } from './routes/_dashboard/tribe/membership-tiers/index'
import { Route as DashboardStoreSettingsIndexRouteImport } from './routes/_dashboard/store/settings/index'
import { Route as DashboardStoreProductsIndexRouteImport } from './routes/_dashboard/store/products/index'
import { Route as DashboardStoreOrdersIndexRouteImport } from './routes/_dashboard/store/orders/index'
import { Route as DashboardStoreMusicIndexRouteImport } from './routes/_dashboard/store/music/index'
import { Route as DashboardTribePostsCreateRouteImport } from './routes/_dashboard/tribe/posts/create'
import { Route as DashboardTribeMembershipTiersCreateRouteImport } from './routes/_dashboard/tribe/membership-tiers/create'
import { Route as DashboardStoreProductsCeateRouteImport } from './routes/_dashboard/store/products/ceate'
import { Route as DashboardStoreMusicCreateRouteImport } from './routes/_dashboard/store/music/create'
import { Route as DashboardWebsiteThemesSlugPreviewRouteImport } from './routes/_dashboard/website/themes/$slug.preview'
import { Route as DashboardWebsiteHomeVersionIdEditRouteImport } from './routes/_dashboard/website/home/$versionId.edit'
import { Route as DashboardTribePostsPostIdEditRouteImport } from './routes/_dashboard/tribe/posts/$postId.edit'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardTribeIndexRoute = DashboardTribeIndexRouteImport.update({
  id: '/tribe/',
  path: '/tribe/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardTribeMembersRoute = DashboardTribeMembersRouteImport.update({
  id: '/tribe/members',
  path: '/tribe/members',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardTribeCollectionsRoute =
  DashboardTribeCollectionsRouteImport.update({
    id: '/tribe/collections',
    path: '/tribe/collections',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWebsiteThemesIndexRoute =
  DashboardWebsiteThemesIndexRouteImport.update({
    id: '/website/themes/',
    path: '/website/themes/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWebsiteHomeIndexRoute =
  DashboardWebsiteHomeIndexRouteImport.update({
    id: '/website/home/',
    path: '/website/home/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardTribePostsIndexRoute =
  DashboardTribePostsIndexRouteImport.update({
    id: '/tribe/posts/',
    path: '/tribe/posts/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardTribeMessagesIndexRoute =
  DashboardTribeMessagesIndexRouteImport.update({
    id: '/tribe/messages/',
    path: '/tribe/messages/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardTribeMembershipTiersIndexRoute =
  DashboardTribeMembershipTiersIndexRouteImport.update({
    id: '/tribe/membership-tiers/',
    path: '/tribe/membership-tiers/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardStoreSettingsIndexRoute =
  DashboardStoreSettingsIndexRouteImport.update({
    id: '/store/settings/',
    path: '/store/settings/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardStoreProductsIndexRoute =
  DashboardStoreProductsIndexRouteImport.update({
    id: '/store/products/',
    path: '/store/products/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardStoreOrdersIndexRoute =
  DashboardStoreOrdersIndexRouteImport.update({
    id: '/store/orders/',
    path: '/store/orders/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardStoreMusicIndexRoute =
  DashboardStoreMusicIndexRouteImport.update({
    id: '/store/music/',
    path: '/store/music/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardTribePostsCreateRoute =
  DashboardTribePostsCreateRouteImport.update({
    id: '/tribe/posts/create',
    path: '/tribe/posts/create',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardTribeMembershipTiersCreateRoute =
  DashboardTribeMembershipTiersCreateRouteImport.update({
    id: '/tribe/membership-tiers/create',
    path: '/tribe/membership-tiers/create',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardStoreProductsCeateRoute =
  DashboardStoreProductsCeateRouteImport.update({
    id: '/store/products/ceate',
    path: '/store/products/ceate',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardStoreMusicCreateRoute =
  DashboardStoreMusicCreateRouteImport.update({
    id: '/store/music/create',
    path: '/store/music/create',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWebsiteThemesSlugPreviewRoute =
  DashboardWebsiteThemesSlugPreviewRouteImport.update({
    id: '/website/themes/$slug/preview',
    path: '/website/themes/$slug/preview',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardWebsiteHomeVersionIdEditRoute =
  DashboardWebsiteHomeVersionIdEditRouteImport.update({
    id: '/website/home/$versionId/edit',
    path: '/website/home/$versionId/edit',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardTribePostsPostIdEditRoute =
  DashboardTribePostsPostIdEditRouteImport.update({
    id: '/tribe/posts/$postId/edit',
    path: '/tribe/posts/$postId/edit',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof DashboardIndexRoute
  '/tribe/collections': typeof DashboardTribeCollectionsRoute
  '/tribe/members': typeof DashboardTribeMembersRoute
  '/tribe': typeof DashboardTribeIndexRoute
  '/store/music/create': typeof DashboardStoreMusicCreateRoute
  '/store/products/ceate': typeof DashboardStoreProductsCeateRoute
  '/tribe/membership-tiers/create': typeof DashboardTribeMembershipTiersCreateRoute
  '/tribe/posts/create': typeof DashboardTribePostsCreateRoute
  '/store/music': typeof DashboardStoreMusicIndexRoute
  '/store/orders': typeof DashboardStoreOrdersIndexRoute
  '/store/products': typeof DashboardStoreProductsIndexRoute
  '/store/settings': typeof DashboardStoreSettingsIndexRoute
  '/tribe/membership-tiers': typeof DashboardTribeMembershipTiersIndexRoute
  '/tribe/messages': typeof DashboardTribeMessagesIndexRoute
  '/tribe/posts': typeof DashboardTribePostsIndexRoute
  '/website/home': typeof DashboardWebsiteHomeIndexRoute
  '/website/themes': typeof DashboardWebsiteThemesIndexRoute
  '/tribe/posts/$postId/edit': typeof DashboardTribePostsPostIdEditRoute
  '/website/home/$versionId/edit': typeof DashboardWebsiteHomeVersionIdEditRoute
  '/website/themes/$slug/preview': typeof DashboardWebsiteThemesSlugPreviewRoute
}
export interface FileRoutesByTo {
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/': typeof DashboardIndexRoute
  '/tribe/collections': typeof DashboardTribeCollectionsRoute
  '/tribe/members': typeof DashboardTribeMembersRoute
  '/tribe': typeof DashboardTribeIndexRoute
  '/store/music/create': typeof DashboardStoreMusicCreateRoute
  '/store/products/ceate': typeof DashboardStoreProductsCeateRoute
  '/tribe/membership-tiers/create': typeof DashboardTribeMembershipTiersCreateRoute
  '/tribe/posts/create': typeof DashboardTribePostsCreateRoute
  '/store/music': typeof DashboardStoreMusicIndexRoute
  '/store/orders': typeof DashboardStoreOrdersIndexRoute
  '/store/products': typeof DashboardStoreProductsIndexRoute
  '/store/settings': typeof DashboardStoreSettingsIndexRoute
  '/tribe/membership-tiers': typeof DashboardTribeMembershipTiersIndexRoute
  '/tribe/messages': typeof DashboardTribeMessagesIndexRoute
  '/tribe/posts': typeof DashboardTribePostsIndexRoute
  '/website/home': typeof DashboardWebsiteHomeIndexRoute
  '/website/themes': typeof DashboardWebsiteThemesIndexRoute
  '/tribe/posts/$postId/edit': typeof DashboardTribePostsPostIdEditRoute
  '/website/home/$versionId/edit': typeof DashboardWebsiteHomeVersionIdEditRoute
  '/website/themes/$slug/preview': typeof DashboardWebsiteThemesSlugPreviewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/tribe/collections': typeof DashboardTribeCollectionsRoute
  '/_dashboard/tribe/members': typeof DashboardTribeMembersRoute
  '/_dashboard/tribe/': typeof DashboardTribeIndexRoute
  '/_dashboard/store/music/create': typeof DashboardStoreMusicCreateRoute
  '/_dashboard/store/products/ceate': typeof DashboardStoreProductsCeateRoute
  '/_dashboard/tribe/membership-tiers/create': typeof DashboardTribeMembershipTiersCreateRoute
  '/_dashboard/tribe/posts/create': typeof DashboardTribePostsCreateRoute
  '/_dashboard/store/music/': typeof DashboardStoreMusicIndexRoute
  '/_dashboard/store/orders/': typeof DashboardStoreOrdersIndexRoute
  '/_dashboard/store/products/': typeof DashboardStoreProductsIndexRoute
  '/_dashboard/store/settings/': typeof DashboardStoreSettingsIndexRoute
  '/_dashboard/tribe/membership-tiers/': typeof DashboardTribeMembershipTiersIndexRoute
  '/_dashboard/tribe/messages/': typeof DashboardTribeMessagesIndexRoute
  '/_dashboard/tribe/posts/': typeof DashboardTribePostsIndexRoute
  '/_dashboard/website/home/': typeof DashboardWebsiteHomeIndexRoute
  '/_dashboard/website/themes/': typeof DashboardWebsiteThemesIndexRoute
  '/_dashboard/tribe/posts/$postId/edit': typeof DashboardTribePostsPostIdEditRoute
  '/_dashboard/website/home/$versionId/edit': typeof DashboardWebsiteHomeVersionIdEditRoute
  '/_dashboard/website/themes/$slug/preview': typeof DashboardWebsiteThemesSlugPreviewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/'
    | '/tribe/collections'
    | '/tribe/members'
    | '/tribe'
    | '/store/music/create'
    | '/store/products/ceate'
    | '/tribe/membership-tiers/create'
    | '/tribe/posts/create'
    | '/store/music'
    | '/store/orders'
    | '/store/products'
    | '/store/settings'
    | '/tribe/membership-tiers'
    | '/tribe/messages'
    | '/tribe/posts'
    | '/website/home'
    | '/website/themes'
    | '/tribe/posts/$postId/edit'
    | '/website/home/$versionId/edit'
    | '/website/themes/$slug/preview'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/'
    | '/tribe/collections'
    | '/tribe/members'
    | '/tribe'
    | '/store/music/create'
    | '/store/products/ceate'
    | '/tribe/membership-tiers/create'
    | '/tribe/posts/create'
    | '/store/music'
    | '/store/orders'
    | '/store/products'
    | '/store/settings'
    | '/tribe/membership-tiers'
    | '/tribe/messages'
    | '/tribe/posts'
    | '/website/home'
    | '/website/themes'
    | '/tribe/posts/$postId/edit'
    | '/website/home/$versionId/edit'
    | '/website/themes/$slug/preview'
  id:
    | '__root__'
    | '/_auth'
    | '/_dashboard'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_dashboard/'
    | '/_dashboard/tribe/collections'
    | '/_dashboard/tribe/members'
    | '/_dashboard/tribe/'
    | '/_dashboard/store/music/create'
    | '/_dashboard/store/products/ceate'
    | '/_dashboard/tribe/membership-tiers/create'
    | '/_dashboard/tribe/posts/create'
    | '/_dashboard/store/music/'
    | '/_dashboard/store/orders/'
    | '/_dashboard/store/products/'
    | '/_dashboard/store/settings/'
    | '/_dashboard/tribe/membership-tiers/'
    | '/_dashboard/tribe/messages/'
    | '/_dashboard/tribe/posts/'
    | '/_dashboard/website/home/'
    | '/_dashboard/website/themes/'
    | '/_dashboard/tribe/posts/$postId/edit'
    | '/_dashboard/website/home/$versionId/edit'
    | '/_dashboard/website/themes/$slug/preview'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_dashboard/tribe/': {
      id: '/_dashboard/tribe/'
      path: '/tribe'
      fullPath: '/tribe'
      preLoaderRoute: typeof DashboardTribeIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/members': {
      id: '/_dashboard/tribe/members'
      path: '/tribe/members'
      fullPath: '/tribe/members'
      preLoaderRoute: typeof DashboardTribeMembersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/collections': {
      id: '/_dashboard/tribe/collections'
      path: '/tribe/collections'
      fullPath: '/tribe/collections'
      preLoaderRoute: typeof DashboardTribeCollectionsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/website/themes/': {
      id: '/_dashboard/website/themes/'
      path: '/website/themes'
      fullPath: '/website/themes'
      preLoaderRoute: typeof DashboardWebsiteThemesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/website/home/': {
      id: '/_dashboard/website/home/'
      path: '/website/home'
      fullPath: '/website/home'
      preLoaderRoute: typeof DashboardWebsiteHomeIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/posts/': {
      id: '/_dashboard/tribe/posts/'
      path: '/tribe/posts'
      fullPath: '/tribe/posts'
      preLoaderRoute: typeof DashboardTribePostsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/messages/': {
      id: '/_dashboard/tribe/messages/'
      path: '/tribe/messages'
      fullPath: '/tribe/messages'
      preLoaderRoute: typeof DashboardTribeMessagesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/membership-tiers/': {
      id: '/_dashboard/tribe/membership-tiers/'
      path: '/tribe/membership-tiers'
      fullPath: '/tribe/membership-tiers'
      preLoaderRoute: typeof DashboardTribeMembershipTiersIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/store/settings/': {
      id: '/_dashboard/store/settings/'
      path: '/store/settings'
      fullPath: '/store/settings'
      preLoaderRoute: typeof DashboardStoreSettingsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/store/products/': {
      id: '/_dashboard/store/products/'
      path: '/store/products'
      fullPath: '/store/products'
      preLoaderRoute: typeof DashboardStoreProductsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/store/orders/': {
      id: '/_dashboard/store/orders/'
      path: '/store/orders'
      fullPath: '/store/orders'
      preLoaderRoute: typeof DashboardStoreOrdersIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/store/music/': {
      id: '/_dashboard/store/music/'
      path: '/store/music'
      fullPath: '/store/music'
      preLoaderRoute: typeof DashboardStoreMusicIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/posts/create': {
      id: '/_dashboard/tribe/posts/create'
      path: '/tribe/posts/create'
      fullPath: '/tribe/posts/create'
      preLoaderRoute: typeof DashboardTribePostsCreateRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/membership-tiers/create': {
      id: '/_dashboard/tribe/membership-tiers/create'
      path: '/tribe/membership-tiers/create'
      fullPath: '/tribe/membership-tiers/create'
      preLoaderRoute: typeof DashboardTribeMembershipTiersCreateRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/store/products/ceate': {
      id: '/_dashboard/store/products/ceate'
      path: '/store/products/ceate'
      fullPath: '/store/products/ceate'
      preLoaderRoute: typeof DashboardStoreProductsCeateRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/store/music/create': {
      id: '/_dashboard/store/music/create'
      path: '/store/music/create'
      fullPath: '/store/music/create'
      preLoaderRoute: typeof DashboardStoreMusicCreateRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/website/themes/$slug/preview': {
      id: '/_dashboard/website/themes/$slug/preview'
      path: '/website/themes/$slug/preview'
      fullPath: '/website/themes/$slug/preview'
      preLoaderRoute: typeof DashboardWebsiteThemesSlugPreviewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/website/home/$versionId/edit': {
      id: '/_dashboard/website/home/$versionId/edit'
      path: '/website/home/$versionId/edit'
      fullPath: '/website/home/$versionId/edit'
      preLoaderRoute: typeof DashboardWebsiteHomeVersionIdEditRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/tribe/posts/$postId/edit': {
      id: '/_dashboard/tribe/posts/$postId/edit'
      path: '/tribe/posts/$postId/edit'
      fullPath: '/tribe/posts/$postId/edit'
      preLoaderRoute: typeof DashboardTribePostsPostIdEditRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardTribeCollectionsRoute: typeof DashboardTribeCollectionsRoute
  DashboardTribeMembersRoute: typeof DashboardTribeMembersRoute
  DashboardTribeIndexRoute: typeof DashboardTribeIndexRoute
  DashboardStoreMusicCreateRoute: typeof DashboardStoreMusicCreateRoute
  DashboardStoreProductsCeateRoute: typeof DashboardStoreProductsCeateRoute
  DashboardTribeMembershipTiersCreateRoute: typeof DashboardTribeMembershipTiersCreateRoute
  DashboardTribePostsCreateRoute: typeof DashboardTribePostsCreateRoute
  DashboardStoreMusicIndexRoute: typeof DashboardStoreMusicIndexRoute
  DashboardStoreOrdersIndexRoute: typeof DashboardStoreOrdersIndexRoute
  DashboardStoreProductsIndexRoute: typeof DashboardStoreProductsIndexRoute
  DashboardStoreSettingsIndexRoute: typeof DashboardStoreSettingsIndexRoute
  DashboardTribeMembershipTiersIndexRoute: typeof DashboardTribeMembershipTiersIndexRoute
  DashboardTribeMessagesIndexRoute: typeof DashboardTribeMessagesIndexRoute
  DashboardTribePostsIndexRoute: typeof DashboardTribePostsIndexRoute
  DashboardWebsiteHomeIndexRoute: typeof DashboardWebsiteHomeIndexRoute
  DashboardWebsiteThemesIndexRoute: typeof DashboardWebsiteThemesIndexRoute
  DashboardTribePostsPostIdEditRoute: typeof DashboardTribePostsPostIdEditRoute
  DashboardWebsiteHomeVersionIdEditRoute: typeof DashboardWebsiteHomeVersionIdEditRoute
  DashboardWebsiteThemesSlugPreviewRoute: typeof DashboardWebsiteThemesSlugPreviewRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardTribeCollectionsRoute: DashboardTribeCollectionsRoute,
  DashboardTribeMembersRoute: DashboardTribeMembersRoute,
  DashboardTribeIndexRoute: DashboardTribeIndexRoute,
  DashboardStoreMusicCreateRoute: DashboardStoreMusicCreateRoute,
  DashboardStoreProductsCeateRoute: DashboardStoreProductsCeateRoute,
  DashboardTribeMembershipTiersCreateRoute:
    DashboardTribeMembershipTiersCreateRoute,
  DashboardTribePostsCreateRoute: DashboardTribePostsCreateRoute,
  DashboardStoreMusicIndexRoute: DashboardStoreMusicIndexRoute,
  DashboardStoreOrdersIndexRoute: DashboardStoreOrdersIndexRoute,
  DashboardStoreProductsIndexRoute: DashboardStoreProductsIndexRoute,
  DashboardStoreSettingsIndexRoute: DashboardStoreSettingsIndexRoute,
  DashboardTribeMembershipTiersIndexRoute:
    DashboardTribeMembershipTiersIndexRoute,
  DashboardTribeMessagesIndexRoute: DashboardTribeMessagesIndexRoute,
  DashboardTribePostsIndexRoute: DashboardTribePostsIndexRoute,
  DashboardWebsiteHomeIndexRoute: DashboardWebsiteHomeIndexRoute,
  DashboardWebsiteThemesIndexRoute: DashboardWebsiteThemesIndexRoute,
  DashboardTribePostsPostIdEditRoute: DashboardTribePostsPostIdEditRoute,
  DashboardWebsiteHomeVersionIdEditRoute:
    DashboardWebsiteHomeVersionIdEditRoute,
  DashboardWebsiteThemesSlugPreviewRoute:
    DashboardWebsiteThemesSlugPreviewRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
