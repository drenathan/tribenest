/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Accounts {
  createdAt: Generated<Timestamp>;
  email: string;
  firstName: string;
  id: Generated<string>;
  lastName: string;
  password: string;
  updatedAt: Generated<Timestamp>;
}

export interface Comments {
  accountId: string;
  archivedAt: Timestamp | null;
  content: string;
  createdAt: Generated<Timestamp>;
  entityId: string;
  entityType: string;
  id: Generated<string>;
  updatedAt: Generated<Timestamp>;
}

export interface Likes {
  accountId: string;
  createdAt: Generated<Timestamp>;
  entityId: string;
  entityType: string;
  id: Generated<string>;
  updatedAt: Generated<Timestamp>;
}

export interface Media {
  createdAt: Generated<Timestamp>;
  filename: string | null;
  id: Generated<string>;
  name: string | null;
  parent: string;
  profileId: string;
  size: Int8;
  type: string;
  updatedAt: Generated<Timestamp>;
  url: string;
}

export interface MediaMappings {
  createdAt: Generated<Timestamp>;
  entityId: string;
  entityType: string;
  id: Generated<string>;
  mediaId: string;
  order: number;
  updatedAt: Generated<Timestamp>;
}

export interface MembershipBenefits {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  profileId: string;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface Memberships {
  accountId: string;
  changedToMembershipId: string | null;
  createdAt: Generated<Timestamp>;
  endDate: Timestamp | null;
  id: Generated<string>;
  membershipTierId: string;
  profileId: string;
  profilePaymentSubscriptionsId: string | null;
  startDate: Timestamp;
  status: string;
  updatedAt: Generated<Timestamp>;
}

export interface MembershipTiers {
  createdAt: Generated<Timestamp>;
  description: string;
  id: Generated<string>;
  isDefault: Generated<boolean | null>;
  name: string;
  payWhatYouWant: Generated<boolean | null>;
  payWhatYouWantMaximum: number | null;
  payWhatYouWantMinimum: number | null;
  priceMonthly: number | null;
  priceYearly: number | null;
  profileId: string;
  updatedAt: Generated<Timestamp>;
}

export interface MembershipTiersBenefits {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  membershipBenefitId: string;
  membershipTierId: string;
  order: number;
  updatedAt: Generated<Timestamp>;
}

export interface OrderItems {
  coverImage: string | null;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  isGift: Generated<boolean>;
  orderId: string;
  payWhatYouWant: Generated<boolean>;
  price: Numeric;
  productId: string;
  productVariantId: string;
  quantity: number;
  recipientEmail: string | null;
  recipientMessage: string | null;
  recipientName: string | null;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface Orders {
  accountId: string | null;
  createdAt: Generated<Timestamp>;
  email: string | null;
  firstName: string | null;
  id: Generated<string>;
  lastName: string | null;
  paymentId: string | null;
  paymentProviderName: string;
  profileId: string;
  status: string;
  totalAmount: Numeric;
  updatedAt: Generated<Timestamp>;
}

export interface PostCollectionPosts {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  order: number;
  postCollectionId: string;
  postId: string;
  updatedAt: Generated<Timestamp>;
}

export interface PostCollections {
  archivedAt: Timestamp | null;
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  name: string;
  postType: string;
  profileId: string;
  updatedAt: Generated<Timestamp>;
}

export interface Posts {
  archivedAt: Timestamp | null;
  caption: string;
  createdAt: Generated<Timestamp>;
  createdBy: string;
  id: Generated<string>;
  membershipTiers: Generated<Json>;
  profileId: string;
  type: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProductCategories {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface Products {
  archivedAt: Timestamp | null;
  artist: string | null;
  categoryId: string;
  createdAt: Generated<Timestamp>;
  credits: string | null;
  description: string;
  id: Generated<string>;
  isSingle: Generated<boolean | null>;
  profileId: string;
  publishedAt: Timestamp | null;
  tags: string[] | null;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProductVariantConfigurations {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  productVariantId: string;
  productVariantOptionId: string;
  productVariantOptionValueId: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProductVariantOptions {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProductVariantOptionValues {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  productVariantOptionId: string;
  updatedAt: Generated<Timestamp>;
  value: string;
}

export interface ProductVariants {
  createdAt: Generated<Timestamp>;
  deliveryType: string;
  description: string | null;
  id: Generated<string>;
  isDefault: Generated<boolean>;
  payWhatYouWant: Generated<boolean | null>;
  payWhatYouWantMaximum: number | null;
  price: Numeric;
  productId: string;
  title: string;
  upcCode: string | null;
  updatedAt: Generated<Timestamp>;
}

export interface ProductVariantTracks {
  artist: string | null;
  createdAt: Generated<Timestamp>;
  credits: string | null;
  description: string | null;
  hasExplicitContent: Generated<boolean>;
  id: Generated<string>;
  isFeatured: Generated<boolean>;
  isrcCode: string | null;
  productVariantId: string;
  title: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProfileAuthorizations {
  accountId: string;
  archivedAt: Timestamp | null;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  isOwner: Generated<boolean>;
  permissions: Generated<Json>;
  profileId: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProfileConfigurations {
  id: Generated<string>;
  paymentProviderName: string | null;
  paymentProviderPrivateKey: string | null;
  paymentProviderPublicKey: string | null;
  paymentProviderWebhookSecret: string | null;
  profileId: string;
  r2AccessKeyId: string | null;
  r2BucketName: string | null;
  r2BucketUrl: string | null;
  r2Endpoint: string | null;
  r2Region: string | null;
  r2SecretAccessKey: string | null;
  smtpFrom: string | null;
  smtpHost: string | null;
  smtpPassword: string | null;
  smtpPort: string | null;
  smtpUsername: string | null;
}

export interface ProfilePaymentCustomers {
  accountId: string;
  createdAt: Generated<Timestamp>;
  customerId: string;
  id: Generated<string>;
  paymentProviderName: string;
  profileId: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProfilePaymentPrices {
  amount: number;
  billingCycle: string;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  paymentProviderName: string;
  priceId: string;
  profileId: string;
  updatedAt: Generated<Timestamp>;
}

export interface ProfilePaymentSubscriptions {
  accountId: string;
  createdAt: Generated<Timestamp>;
  currentPeriodEnd: Timestamp;
  currentPeriodStart: Timestamp;
  customerId: string;
  id: Generated<string>;
  paymentProfilePriceId: string;
  paymentProviderName: string;
  paymentProviderSubscriptionId: string;
  profileId: string;
  status: string;
  updatedAt: Generated<Timestamp>;
}

export interface Profiles {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  name: string;
  subdomain: string;
  updatedAt: Generated<Timestamp>;
}

export interface Saves {
  accountId: string;
  archivedAt: Timestamp | null;
  createdAt: Generated<Timestamp>;
  entityId: string;
  entityType: string;
  id: Generated<string>;
  updatedAt: Generated<Timestamp>;
}

export interface Sessions {
  accountId: string;
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  isValid: Generated<boolean>;
  updatedAt: Generated<Timestamp>;
  userAgent: Json | null;
}

export interface WebsiteVersionPages {
  content: Generated<Json>;
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  pathname: string;
  title: string;
  updatedAt: Generated<Timestamp>;
  websiteVersionId: string;
}

export interface WebsiteVersions {
  createdAt: Generated<Timestamp>;
  id: Generated<string>;
  isActive: Generated<boolean>;
  profileId: string;
  themeName: string;
  themeSettings: Json;
  themeThumbnail: string;
  themeVersion: string;
  updatedAt: Generated<Timestamp>;
  version: Generated<number>;
}

export interface DB {
  accounts: Accounts;
  comments: Comments;
  likes: Likes;
  media: Media;
  mediaMappings: MediaMappings;
  membershipBenefits: MembershipBenefits;
  memberships: Memberships;
  membershipTiers: MembershipTiers;
  membershipTiersBenefits: MembershipTiersBenefits;
  orderItems: OrderItems;
  orders: Orders;
  postCollectionPosts: PostCollectionPosts;
  postCollections: PostCollections;
  posts: Posts;
  productCategories: ProductCategories;
  products: Products;
  productVariantConfigurations: ProductVariantConfigurations;
  productVariantOptions: ProductVariantOptions;
  productVariantOptionValues: ProductVariantOptionValues;
  productVariants: ProductVariants;
  productVariantTracks: ProductVariantTracks;
  profileAuthorizations: ProfileAuthorizations;
  profileConfigurations: ProfileConfigurations;
  profilePaymentCustomers: ProfilePaymentCustomers;
  profilePaymentPrices: ProfilePaymentPrices;
  profilePaymentSubscriptions: ProfilePaymentSubscriptions;
  profiles: Profiles;
  saves: Saves;
  sessions: Sessions;
  websiteVersionPages: WebsiteVersionPages;
  websiteVersions: WebsiteVersions;
}
